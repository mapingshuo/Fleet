// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: idl_options.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "idl_options.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::EnumDescriptor* ConvertibleIdlType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_idl_5foptions_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_idl_5foptions_2eproto() {
  protobuf_AddDesc_idl_5foptions_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "idl_options.proto");
  GOOGLE_CHECK(file != NULL);
  ConvertibleIdlType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_idl_5foptions_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_idl_5foptions_2eproto() {
}

void protobuf_AddDesc_idl_5foptions_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_idl_5foptions_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021idl_options.proto\032 google/protobuf/des"
    "criptor.proto*\351\001\n\022ConvertibleIdlType\022\014\n\010"
    "IDL_AUTO\020\000\022\014\n\010IDL_INT8\020\001\022\r\n\tIDL_INT16\020\002\022"
    "\r\n\tIDL_INT32\020\003\022\r\n\tIDL_INT64\020\004\022\r\n\tIDL_UIN"
    "T8\020\005\022\016\n\nIDL_UINT16\020\006\022\016\n\nIDL_UINT32\020\007\022\016\n\n"
    "IDL_UINT64\020\010\022\014\n\010IDL_BOOL\020\t\022\r\n\tIDL_FLOAT\020"
    "\n\022\016\n\nIDL_DOUBLE\020\013\022\016\n\nIDL_BINARY\020\014\022\016\n\nIDL"
    "_STRING\020\r:3\n\013idl_support\022\034.google.protob"
    "uf.FileOptions\030\370\306\005 \001(\010:F\n\010idl_type\022\035.goo"
    "gle.protobuf.FieldOptions\030\371\306\005 \001(\0162\023.Conv"
    "ertibleIdlType:/\n\006idl_on\022\035.google.protob"
    "uf.FieldOptions\030\372\306\005 \001(\005:1\n\010idl_name\022\035.go"
    "ogle.protobuf.FieldOptions\030\373\306\005 \001(\t", 514);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "idl_options.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::google::protobuf::FileOptions::default_instance(),
    91000, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    &::google::protobuf::FieldOptions::default_instance(),
    91001, 14, false, false,
    &::ConvertibleIdlType_IsValid);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::google::protobuf::FieldOptions::default_instance(),
    91002, 5, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::google::protobuf::FieldOptions::default_instance(),
    91003, 9, false, false);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_idl_5foptions_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_idl_5foptions_2eproto {
  StaticDescriptorInitializer_idl_5foptions_2eproto() {
    protobuf_AddDesc_idl_5foptions_2eproto();
  }
} static_descriptor_initializer_idl_5foptions_2eproto_;
const ::google::protobuf::EnumDescriptor* ConvertibleIdlType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConvertibleIdlType_descriptor_;
}
bool ConvertibleIdlType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FileOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  idl_support(kIdlSupportFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::EnumTypeTraits< ::ConvertibleIdlType, ::ConvertibleIdlType_IsValid>, 14, false >
  idl_type(kIdlTypeFieldNumber, static_cast< ::ConvertibleIdlType >(0));
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  idl_on(kIdlOnFieldNumber, 0);
const ::std::string idl_name_default("");
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  idl_name(kIdlNameFieldNumber, idl_name_default);

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
